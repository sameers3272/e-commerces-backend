{"version":3,"file":"static/js/143.1bbbb5eb.chunk.js","mappings":"0QA6FA,EAhFsB,WAClB,OAAmCA,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,cAAjB,IAAvCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,QAClBC,GAAWC,EAAAA,EAAAA,MACVC,GAASC,EAAAA,EAAAA,MAATD,MAEDE,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MACd,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8CF,EAAAA,EAAAA,UAAS,IAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KAuBA,OAbAC,EAAAA,EAAAA,YAAU,WACJhB,IACFS,EAAMT,MAAMA,GACZO,GAASU,EAAAA,EAAAA,QAGPf,IACFO,EAAMP,QAAQ,iCACdC,EAAS,UAGZ,GAAE,CAACH,EAAOO,EAAUE,EAAMN,EAASD,KAGlC,SAAC,EAAAgB,SAAD,UACGjB,GACC,SAACkB,EAAA,EAAD,KAEA,UAAC,EAAAD,SAAD,YACE,SAACE,EAAA,EAAD,CAAUC,MAAM,oBAChB,gBAAKC,UAAU,yBAAf,UACE,iBAAKA,UAAU,mBAAf,WACE,eAAIA,UAAU,uBAAd,4BACA,kBACEA,UAAU,oBACVC,SAjCc,SAACC,GAC3BA,EAAEC,iBACF,IAAMC,EAAS,IAAIC,SACnBD,EAAOE,IAAI,WAAWhB,GACtBc,EAAOE,IAAI,kBAAkBd,GAC7BP,GAASsB,EAAAA,EAAAA,IAAcxB,EAAMyB,OAAOC,YAAYL,IACjD,EAyBW,WAKE,iBAAKJ,UAAU,gBAAf,WACE,SAAC,MAAD,KACA,kBACEU,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRC,MAAOvB,EACPwB,SAAU,SAACZ,GAAD,OAAOX,EAAYW,EAAEa,OAAOF,MAA5B,QAGd,iBAAKb,UAAU,gBAAf,WACE,SAAC,MAAD,KACA,kBACEU,KAAK,WACLC,YAAY,mBACZC,UAAQ,EACRC,MAAOrB,EACPsB,SAAU,SAACZ,GAAD,OAAOT,EAAmBS,EAAEa,OAAOF,MAAnC,QAGd,kBACEH,KAAK,SACLG,MAAM,iBACNb,UAAU,mBACVgB,WAAUrC,gBAS3B,C,iDClFH,IARiB,SAAC,GAAa,IAAZoB,EAAW,EAAXA,MACjB,OACE,SAAC,IAAD,WACI,2BAAQA,KAGf,C","sources":["components/User/Profile/ResetPassword/ResetPassword.js","components/layout/MetaData/MetaData.js"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport \"./ResetPassword.css\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { BsFillShieldLockFill } from \"react-icons/bs\";\r\nimport {\r\n  clearErrors,\r\n  resetPassword,\r\n} from \"../../../../redux/actions/userAction\";\r\nimport Loader from \"../../../layout/Loader/Loader\";\r\nimport MetaData from \"../../../layout/MetaData/MetaData\";\r\n\r\nconst ResetPassword = () => {\r\n    const { error, loading ,success} = useSelector((state) => state.forgotPassword);\r\n    const navigate = useNavigate();\r\n    const {token} = useParams();\r\n  \r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  \r\n    const resetPasswordSubmit = (e) => {\r\n      e.preventDefault();\r\n      const myForm = new FormData();\r\n      myForm.set(\"password\",password)\r\n      myForm.set(\"confirmPassword\",confirmPassword)\r\n      dispatch(resetPassword(token,Object.fromEntries(myForm)));\r\n    };\r\n  \r\n    useEffect(() => {\r\n      if (error) {\r\n        alert.error(error);\r\n        dispatch(clearErrors());\r\n      }\r\n  \r\n      if (success) {\r\n        alert.success(\"Password Updated Successfully\");\r\n        navigate(\"/login\");\r\n      }\r\n  \r\n    }, [error, dispatch, alert,navigate,success]);\r\n  \r\n    return (\r\n      <Fragment>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Fragment>\r\n            <MetaData title=\"Reset Password\" />\r\n            <div className=\"resetPasswordContainer\">\r\n              <div className=\"resetPasswordBox\">\r\n                <h2 className=\"resetPasswordHeading\">Reset Profile</h2>\r\n                <form\r\n                  className=\"resetPasswordForm\"\r\n                  onSubmit={resetPasswordSubmit}\r\n                >\r\n                  \r\n                  <div className=\"resetPassword\">\r\n                    <BsFillShieldLockFill />\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"resetPassword\">\r\n                    <BsFillShieldLockFill />\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Confirm Password\"\r\n                      required\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Reset Password\"\r\n                    className=\"resetPasswordBtn\"\r\n                    disabled={loading ? true : false}\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  };\r\nexport default ResetPassword;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData"],"names":["useSelector","state","forgotPassword","error","loading","success","navigate","useNavigate","token","useParams","dispatch","useDispatch","alert","useAlert","useState","password","setPassword","confirmPassword","setConfirmPassword","useEffect","clearErrors","Fragment","Loader","MetaData","title","className","onSubmit","e","preventDefault","myForm","FormData","set","resetPassword","Object","fromEntries","type","placeholder","required","value","onChange","target","disabled"],"sourceRoot":""}