{"version":3,"file":"static/js/586.57bbc922.chunk.js","mappings":"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","sources":["components/User/LoginSignup/LoginSignup.js","components/layout/MetaData/MetaData.js"],"sourcesContent":["import React, { Fragment, useRef, useState, useEffect } from \"react\";\r\nimport \"./LoginSignup.css\";\r\nimport Loader from \"../../layout/Loader/Loader\";\r\nimport { FiMail } from \"react-icons/fi\";\r\nimport { BsFillShieldLockFill } from \"react-icons/bs\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { IoMdPerson } from \"react-icons/io\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  login,\r\n  register,\r\n} from \"../../../redux/actions/userAction\";\r\nimport MetaData from \"../../layout/MetaData/MetaData\";\r\n\r\nconst LoginSignup = () => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const { error, loading, isAuthenticated } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const [loginEmail, setLoginEmail] = useState(\"\");\r\n  const [loginPassword, setLoginPassword] = useState(\"\");\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState(\"./profile.png\");\r\n\r\n  const { name, email, password } = user;\r\n  const loginTab = useRef(null);\r\n  const registerTab = useRef(null);\r\n  const switcherTab = useRef(null);\r\n\r\n  const loginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dispatch(\r\n      login(loginEmail, loginPassword, () => {\r\n        alert.success(\"Logged in successfully\");\r\n      })\r\n    );\r\n  };\r\n\r\n  const registerDataChange = (e) => {\r\n    if (e.target.name === \"avatar\") {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = () => {\r\n        if (reader.readyState === 2) {\r\n          setAvatarPreview(reader.result);\r\n          setAvatar(e.target.files[0]);\r\n        }\r\n      };\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    } else {\r\n      setUser({ ...user, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const registerSubmit = (e) => {\r\n    e.preventDefault();\r\n    const myForm = new FormData();\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"email\", email);\r\n    myForm.set(\"password\", password);\r\n    myForm.append(\"avatar\", avatar);\r\n\r\n    dispatch(register(myForm));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    const redirect = location.search\r\n      ? location.search.split(\"=\")[1]\r\n      : \"account\";\r\n      \r\n    if (isAuthenticated) {\r\n      navigate(`/${redirect}`);\r\n    }\r\n  }, [error, dispatch, alert, isAuthenticated, navigate, location]);\r\n\r\n  const switchTabs = (e, tab) => {\r\n    if (tab === \"login\") {\r\n      switcherTab.current.classList.add(\"shiftToNeutral\");\r\n      switcherTab.current.classList.remove(\"shiftToRight\");\r\n\r\n      registerTab.current.classList.remove(\"shiftToNeutralForm\");\r\n      loginTab.current.classList.remove(\"shiftToLeft\");\r\n    }\r\n    if (tab === \"register\") {\r\n      switcherTab.current.classList.add(\"shiftToRight\");\r\n      switcherTab.current.classList.remove(\"shiftToNeutral\");\r\n\r\n      registerTab.current.classList.add(\"shiftToNeutralForm\");\r\n      loginTab.current.classList.add(\"shiftToLeft\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title=\"Login / Register\" />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"LoginSignupContainer\">\r\n          <div className=\"LoginSignupBox\">\r\n            <div>\r\n              <div className=\"login_signup_toggle\">\r\n                <p onClick={(e) => switchTabs(e, \"login\")}>LOGIN</p>\r\n                <p onClick={(e) => switchTabs(e, \"register\")}>REGISTER</p>\r\n              </div>\r\n              <button ref={switcherTab}></button>\r\n            </div>\r\n            <form className=\"loginForm\" ref={loginTab} onSubmit={loginSubmit}>\r\n              <div className=\"loginEmail\">\r\n                <FiMail />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  value={loginEmail}\r\n                  onChange={(e) => setLoginEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"loginPassword\">\r\n                <BsFillShieldLockFill />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  value={loginPassword}\r\n                  onChange={(e) => setLoginPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <Link to=\"/password/forgot\">Forgot Password ?</Link>\r\n              <input type=\"submit\" value=\"Login\" className=\"loginBtn\" />\r\n            </form>\r\n            <form\r\n              className=\"signupForm\"\r\n              ref={registerTab}\r\n              onSubmit={registerSubmit}\r\n              encType=\"multipart/form-data\"\r\n            >\r\n              <div className=\"signupName\">\r\n                <IoMdPerson />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  required\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={registerDataChange}\r\n                />\r\n              </div>\r\n              <div className=\"signupEmail\">\r\n                <FiMail />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  required\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={registerDataChange}\r\n                />\r\n              </div>\r\n              <div className=\"signupPassword\">\r\n                <BsFillShieldLockFill />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={registerDataChange}\r\n                />\r\n              </div>\r\n              <div id=\"registerImage\">\r\n                <img src={avatarPreview} alt=\"Avatar Preview\" />\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"avatar\"\r\n                  accept=\"image/*\"\r\n                  onChange={registerDataChange}\r\n                />\r\n              </div>\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n                className=\"signupBtn\"\r\n                disabled={loading ? true : false}\r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginSignup;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData"],"names":["dispatch","useDispatch","alert","useAlert","navigate","useNavigate","location","useLocation","useSelector","state","user","error","loading","isAuthenticated","useState","loginEmail","setLoginEmail","loginPassword","setLoginPassword","name","email","password","setUser","avatar","setAvatar","avatarPreview","setAvatarPreview","loginTab","useRef","registerTab","switcherTab","loginSubmit","e","preventDefault","login","success","registerDataChange","target","reader","FileReader","onload","readyState","result","files","readAsDataURL","value","useEffect","clearErrors","redirect","search","split","switchTabs","tab","current","classList","add","remove","Fragment","MetaData","title","Loader","className","onClick","ref","onSubmit","type","placeholder","required","onChange","Link","to","myForm","FormData","set","append","register","encType","id","src","alt","accept","disabled"],"sourceRoot":""}