{"version":3,"file":"static/js/473.8622d28b.chunk.js","mappings":"+PA+EA,EAnEuB,WACrB,OAAoCA,EAAAA,EAAAA,KAClC,SAACC,GAAD,OAAWA,EAAMC,cAAjB,IADMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,QAGlBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MACd,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAoBA,OAXAC,EAAAA,EAAAA,YAAU,WACJT,IACFI,EAAMJ,MAAMA,GACZE,GAASQ,EAAAA,EAAAA,QAGPT,GACFG,EAAMO,QAAQV,EAEjB,GAAE,CAACD,EAAOI,EAAOF,EAAUD,KAG1B,SAAC,EAAAW,SAAD,UACGb,GACC,SAACc,EAAA,EAAD,KAEA,UAAC,EAAAD,SAAD,YACE,SAACE,EAAA,EAAD,CAAUC,MAAM,qBAChB,gBAAKC,UAAU,0BAAf,UACE,iBAAKA,UAAU,oBAAf,WACE,eAAIA,UAAU,wBAAd,6BACA,kBACEA,UAAU,qBACVC,SA9Be,SAACC,GAC5BA,EAAEC,iBACF,IAAMC,EAAS,IAAIC,SACnBD,EAAOE,IAAI,QAASf,GACpBL,GAASJ,EAAAA,EAAAA,IAAeyB,OAAOC,YAAYJ,IAC5C,EAuBW,WAIE,iBAAKJ,UAAU,sBAAf,WACE,SAAC,MAAD,KACA,kBACES,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRC,KAAK,QACLC,MAAOtB,EACPuB,SAAU,SAACZ,GAAD,OAAOV,EAASU,EAAEa,OAAOF,MAAzB,QAId,kBACEJ,KAAK,SACLI,MAAM,SACNb,UAAU,oBACVgB,WAAUjC,gBAS3B,C,iDCnED,IARiB,SAAC,GAAa,IAAZgB,EAAW,EAAXA,MACjB,OACE,SAAC,IAAD,WACI,2BAAQA,KAGf,C","sources":["components/User/Profile/ForgotPassword/ForgotPassword.js","components/layout/MetaData/MetaData.js"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport \"./ForgotPassword.css\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { FiMail } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  clearErrors,\r\n  forgotPassword,\r\n} from \"../../../../redux/actions/userAction\";\r\nimport Loader from \"../../../layout/Loader/Loader\";\r\nimport MetaData from \"../../../layout/MetaData/MetaData\";\r\n\r\nconst ForgotPassword = () => {\r\n  const { loading, error, message } = useSelector(\r\n    (state) => state.forgotPassword\r\n  );\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const forgotPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    const myForm = new FormData();\r\n    myForm.set(\"email\", email);\r\n    dispatch(forgotPassword(Object.fromEntries(myForm)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (message) {\r\n      alert.success(message);\r\n    }\r\n  }, [error, alert, dispatch, message]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title=\"Forgot Password\" />\r\n          <div className=\"forgotPasswordContainer\">\r\n            <div className=\"forgotPasswordBox\">\r\n              <h2 className=\"forgotPasswordHeading\">Update Profile</h2>\r\n              <form\r\n                className=\"forgotPasswordForm\"\r\n                onSubmit={forgotPasswordSubmit}\r\n              >\r\n                <div className=\"forgotPasswordEmail\">\r\n                  <FiMail />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update\"\r\n                  className=\"forgotPasswordBtn\"\r\n                  disabled={loading ? true : false}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData"],"names":["useSelector","state","forgotPassword","loading","error","message","dispatch","useDispatch","alert","useAlert","useState","email","setEmail","useEffect","clearErrors","success","Fragment","Loader","MetaData","title","className","onSubmit","e","preventDefault","myForm","FormData","set","Object","fromEntries","type","placeholder","required","name","value","onChange","target","disabled"],"sourceRoot":""}