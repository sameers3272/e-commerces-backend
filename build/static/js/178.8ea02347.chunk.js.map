{"version":3,"file":"static/js/178.8ea02347.chunk.js","mappings":"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","sources":["components/Cart/CheckOutSteps/CheckOutSteps.js","components/Cart/Shipping/Shipping.js","components/ReusableComponent/Button/Button.js","components/ReusableComponent/Inputs/Input.js","redux/actions/cartAction.js"],"sourcesContent":["import \"./CheckOutSteps.css\";\r\nimport { Step, StepLabel, Stepper, Typography } from \"@material-ui/core\";\r\nimport {\r\n  MdAccountBalance,\r\n  MdLibraryAddCheck,\r\n  MdLocalShipping,\r\n} from \"react-icons/md\";\r\n\r\nconst CheckOutSteps = ({ activeStep }) => {\r\n  const steps = [\r\n    {\r\n      label: <Typography>Shipping Details</Typography>,\r\n      icon: <MdLocalShipping style={{ fontSize: 20 }} />,\r\n    },\r\n    {\r\n      label: <Typography>Confirm Order</Typography>,\r\n      icon: <MdLibraryAddCheck style={{ fontSize: 20 }} />,\r\n    },\r\n    {\r\n      label: <Typography>Payment</Typography>,\r\n      icon: <MdAccountBalance style={{ fontSize: 20 }} />,\r\n    },\r\n  ];\r\n\r\n  const stepStyles = {\r\n    boxSizing: \"border-box\",\r\n  };\r\n  return (\r\n    <div className=\"checkOutSteps\">\r\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\r\n        {steps.map((item, index) => (\r\n          <Step\r\n            key={index}\r\n            active={activeStep === index ? true : false}\r\n            completed={activeStep >= index ? true : false}\r\n          >\r\n            <StepLabel\r\n              style={{\r\n                color: activeStep >= index ? \"tomato\" : \"unset\",\r\n              }}\r\n              icon={item.icon}\r\n            >\r\n              {item.label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOutSteps;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./Shipping.css\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  MdHome,\r\n  MdLocationCity,\r\n  MdOutlinePlace,\r\n  MdPhone,\r\n  MdPublic,\r\n  MdTransferWithinAStation,\r\n} from \"react-icons/md\";\r\nimport { Country, State } from \"country-state-city\";\r\nimport Button from \"../../ReusableComponent/Button/Button\";\r\nimport CheckOutSteps from \"../CheckOutSteps/CheckOutSteps\";\r\nimport { saveShippingInfo } from \"../../../redux/actions/cartAction\";\r\nimport Input from \"../../ReusableComponent/Inputs/Input\";\r\nconst Shipping = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const { shippingInfo } = useSelector((state) => state.cart);\r\n\r\n  const [newShippingInfo, setNewShippingInfo] = useState(\r\n    shippingInfo.address\r\n      ? shippingInfo\r\n      : {\r\n          address: \"\",\r\n          city: \"\",\r\n          pinCode: \"\",\r\n          phoneNo: \"\",\r\n          country: \"\",\r\n          state: \"\",\r\n        }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated === false) {\r\n      navigate(\"/login?redirect=shipping\");\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n  const onChangeHandler = (e) => {\r\n    setNewShippingInfo({ ...newShippingInfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const shippingSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      newShippingInfo.phoneNo.length < 10 ||\r\n      newShippingInfo.phoneNo.length > 10\r\n    ) {\r\n      alert.error(\"Phone Number should be 10 digits\");\r\n      return;\r\n    }\r\n    dispatch(saveShippingInfo(newShippingInfo));\r\n    navigate(\"/order/confirm\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: \"3vmax\" }}>\r\n      <CheckOutSteps activeStep={0} />\r\n      <div className=\"shippingContainer\">\r\n        <div className=\"shippingBox\">\r\n          <h2 className=\"shippingHeading\">Shipping Details</h2>\r\n          <form\r\n            className=\"shippingForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={shippingSubmit}\r\n          >\r\n            <Input\r\n              icon={<MdHome />}\r\n              type=\"text\"\r\n              placeholder=\"Address\"\r\n              name=\"address\"\r\n              value={newShippingInfo.address}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Input\r\n              icon={<MdLocationCity />}\r\n              type=\"text\"\r\n              name=\"city\"\r\n              placeholder=\"City\"\r\n              value={newShippingInfo.city}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Input\r\n              icon={<MdOutlinePlace />}\r\n              type=\"number\"\r\n              name=\"pinCode\"\r\n              placeholder=\"Pin Code\"\r\n              required\r\n              value={newShippingInfo.pinCode}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Input\r\n              icon={<MdPhone />}\r\n              type=\"number\"\r\n              name=\"phoneNo\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"Phone Number\"\r\n              value={newShippingInfo.phoneNo}\r\n              onChange={onChangeHandler}\r\n            />\r\n\r\n            <Input\r\n              icon={<MdPublic />}\r\n              type=\"select\"\r\n              value={newShippingInfo.country}\r\n              name=\"country\"\r\n              onChange={onChangeHandler}\r\n            >\r\n              <option value=\"\">Country</option>\r\n              {Country.getAllCountries().map((country) => (\r\n                <option key={country.isoCode} value={country.isoCode}>\r\n                  {country.name}\r\n                </option>\r\n              ))}\r\n            </Input>\r\n\r\n            {newShippingInfo.country && (\r\n              <Input\r\n                icon={<MdTransferWithinAStation />}\r\n                type=\"select\"\r\n                name=\"state\"\r\n                value={newShippingInfo.state}\r\n                onChange={onChangeHandler}\r\n              >\r\n                <option value=\"\">State</option>\r\n                {State.getStatesOfCountry(newShippingInfo.country).map(\r\n                  (state) => (\r\n                    <option value={state.isoCode} key={state.isoCode}>\r\n                      {state.name}\r\n                    </option>\r\n                  )\r\n                )}\r\n              </Input>\r\n            )}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={newShippingInfo.state ? false : true}\r\n              className=\"shippingBtn\"\r\n            >\r\n              Continue\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={`btn ${props.className?props.className:''}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      style={props.style}\r\n      ref={props.ref}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"./Input.css\";\r\n\r\nconst Input = ({\r\n  type,\r\n  children,\r\n  name,\r\n  onChange,\r\n  value,\r\n  disabled,\r\n  className,\r\n  icon,\r\n  placeholder,\r\n  onClick,\r\n  cols,\r\n  rows,\r\n  accept,\r\n  options,\r\n  id,\r\n  autoComplete\r\n}) => {\r\n  switch (type) {\r\n    case \"text\":\r\n      return (\r\n        <div className=\"input\">\r\n          {icon}\r\n          <input\r\n            type={type}\r\n            required\r\n            value={value}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            className={className}\r\n            onChange={onChange}\r\n            autoComplete={autoComplete}\r\n          />\r\n        </div>\r\n      );\r\n    case \"number\":\r\n      return (\r\n        <div className=\"input\">\r\n          {icon}\r\n          <input\r\n            type={type}\r\n            required\r\n            value={value}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            className={className}\r\n            onChange={onChange}\r\n            autoComplete={autoComplete}\r\n          />\r\n        </div>\r\n      );\r\n    case \"select\":\r\n      return (\r\n        <div className=\"input\">\r\n          {icon}\r\n          <select\r\n            required\r\n            name={name}\r\n            onChange={onChange}\r\n            className={className}\r\n            type={type}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            autoComplete={autoComplete}\r\n          >\r\n            {children}\r\n          </select>\r\n        </div>\r\n      );\r\n    case \"textarea\":\r\n      return (\r\n        <div className=\"input\">\r\n          {icon}\r\n          <textarea\r\n            type={type}\r\n            required\r\n            value={value}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            className={className}\r\n            onChange={onChange}\r\n            cols={cols}\r\n            rows={rows}\r\n            autoComplete={autoComplete}\r\n          ></textarea>\r\n        </div>\r\n      );\r\n    case \"file\":\r\n      return (\r\n        <div className=\"input file\">\r\n          <input\r\n            type={type}\r\n            {...options}\r\n            name={name}\r\n            accept={accept}\r\n            onChange={onChange}\r\n          />\r\n          {children}\r\n        </div>\r\n      );\r\n\r\n    case \"submit\":\r\n      return (\r\n        <div className=\"input\">\r\n          <input\r\n            type={type}\r\n            value={value}\r\n            className={`input ${className}`}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n          />\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <div className=\"input\">\r\n          {icon}\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={value}\r\n            name={name}\r\n            placeholder={placeholder}\r\n            className={className}\r\n            onChange={onChange}\r\n            autoComplete={autoComplete}\r\n          />\r\n        </div>\r\n      );\r\n  }\r\n};\r\n\r\nexport default Input;\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_TO_CART,\r\n  CLEAR_CART,\r\n  REMOVE_CART_ITEM,\r\n  SAVE_SHIPPING_INFO,\r\n} from \"../constants/cartConstant\";\r\n\r\nexport const addItemsToCart = (id, quantity) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/v1/product/${id}`);\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n      product: data.product._id,\r\n      name: data.product.name,\r\n      price: data.product.price,\r\n      image: data.product.images[0],\r\n      stock: data.product.stock,\r\n      quantity,\r\n    },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeItemsFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: REMOVE_CART_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const clearCart = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_CART,\r\n  });\r\n  localStorage.removeItem(\"cartItems\");\r\n};\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch, getState) => {\r\n  dispatch({ type: SAVE_SHIPPING_INFO, payload: data });\r\n  localStorage.setItem(\r\n    \"shippingInfo\",\r\n    JSON.stringify(getState().cart.shippingInfo)\r\n  );\r\n};\r\n"],"names":["activeStep","steps","label","Typography","icon","style","fontSize","className","Stepper","alternativeLabel","boxSizing","map","item","index","Step","active","completed","StepLabel","color","navigate","useNavigate","dispatch","useDispatch","alert","useAlert","useSelector","state","user","isAuthenticated","cart","shippingInfo","useState","address","city","pinCode","phoneNo","country","newShippingInfo","setNewShippingInfo","useEffect","onChangeHandler","e","target","name","value","marginTop","CheckOutSteps","encType","onSubmit","preventDefault","length","error","saveShippingInfo","Input","type","placeholder","onChange","required","autoComplete","Country","isoCode","State","Button","disabled","props","onClick","ref","id","children","cols","rows","accept","options","addItemsToCart","quantity","getState","axios","data","ADD_TO_CART","payload","product","_id","price","image","images","stock","localStorage","setItem","JSON","stringify","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","clearCart","CLEAR_CART","removeItem","SAVE_SHIPPING_INFO"],"sourceRoot":""}