{"version":3,"file":"static/js/693.1906dfd3.chunk.js","mappings":"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","sources":["components/User/Profile/UpdateProfile/UpdateProfile.js","components/layout/MetaData/MetaData.js","util/userAuth.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport \"./UpdateProfile.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { userAuth } from \"../../../../util/userAuth\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { clearErrors, loadUser, updateProfile } from \"../../../../redux/actions/userAction\";\r\nimport { UPDATE_PROFILE_RESET } from \"../../../../redux/constants/userConstant\";\r\nimport { IoMdPerson } from \"react-icons/io\";\r\nimport { FiMail } from \"react-icons/fi\";\r\nimport MetaData from \"../../../layout/MetaData/MetaData\";\r\nimport Loader from \"../../../layout/Loader/Loader\";\r\n\r\nconst UpdateProfile = () => {\r\n  const { isAuthenticated, user } = useSelector((state) => state.user);\r\n  const { error, isUpdated, loading } = useSelector((state) => state.profile);\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [avatarPreview, setAvatarPreview] = useState(`./profile.png`);\r\n\r\n  const updateProfileDataChange = (e) => {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        setAvatarPreview(reader.result);\r\n        setAvatar(e.target.files[0]);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  const updateProfileSubmit = (e) => {\r\n    e.preventDefault();\r\n    const myForm = new FormData();\r\n    myForm.set(\"name\", name);\r\n    myForm.set(\"email\", email);\r\n    myForm.set(\"avatar\", avatar);\r\n    dispatch(updateProfile(Object.fromEntries(myForm)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setAvatarPreview(`/${user.avatar}`);\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"Profile Updated Successfully\");\r\n      dispatch(loadUser());\r\n\r\n      navigate(\"/account\");\r\n      dispatch({ type: UPDATE_PROFILE_RESET });\r\n    }\r\n\r\n    userAuth(isAuthenticated, navigate);\r\n  }, [error, dispatch, alert, isAuthenticated, navigate, isUpdated, user]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Fragment>\r\n          <MetaData title=\"Update Profile\" />\r\n          <div className=\"updateProfileContainer\">\r\n            <div className=\"updateProfileBox\">\r\n              <h2 className=\"updateProfileHeading\">Update Profile</h2>\r\n              <form\r\n                className=\"updateProfileForm\"\r\n                onSubmit={updateProfileSubmit}\r\n                encType=\"multipart/form-data\"\r\n              >\r\n                <div className=\"updateProfileName\">\r\n                  <IoMdPerson />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    required\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={(e)=>setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"updateProfileEmail\">\r\n                  <FiMail />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                    \r\n                  />\r\n                </div>\r\n\r\n                <div id=\"updateProfileImage\">\r\n                  <img src={avatarPreview} alt=\"Avatar Preview\" />\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"avatar\"\r\n                    accept=\"image/*\"\r\n                    onChange={updateProfileDataChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Update\"\r\n                  className=\"updateProfileBtn\"\r\n                  disabled={loading ? true : false}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData","export const userAuth = (isAuthenticated, navigate) => {\r\n  if (isAuthenticated !== undefined) {\r\n    setTimeout(() => {\r\n      if (isAuthenticated === false) {\r\n        console.log(\"userAuth\", isAuthenticated);\r\n        navigate(\"/login\");\r\n      }\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const adminAuth = (admin, user, navigate, alert) => {\r\n  if (\r\n    admin === true &&\r\n    user &&\r\n    user.role !== undefined &&\r\n    user.role !== \"admin\"\r\n  ) {\r\n    console.log(\"adminAuth\");\r\n    navigate(\"/login\");\r\n    alert.error(\"Cannot Access Admin Authorities\");\r\n  }\r\n};\r\n"],"names":["useSelector","state","user","isAuthenticated","profile","error","isUpdated","loading","navigate","useNavigate","dispatch","useDispatch","alert","useAlert","useState","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","useEffect","clearErrors","success","loadUser","type","UPDATE_PROFILE_RESET","userAuth","Fragment","Loader","MetaData","title","className","onSubmit","e","preventDefault","myForm","FormData","set","updateProfile","Object","fromEntries","encType","placeholder","required","value","onChange","target","id","src","alt","accept","reader","FileReader","onload","readyState","result","files","readAsDataURL","disabled","undefined","setTimeout","console","log","adminAuth","admin","role"],"sourceRoot":""}