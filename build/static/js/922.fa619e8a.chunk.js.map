{"version":3,"file":"static/js/922.fa619e8a.chunk.js","mappings":"qRA+IA,EAhIuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MACRC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAkCE,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,YAAjB,IAAtCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,QACtB,GAAkDL,EAAAA,EAAAA,KAChD,SAACC,GAAD,OAAWA,EAAMK,IAAjB,IADMC,EAAR,EAAQA,gBAA0BC,EAAlC,EAAyBH,QA+BzB,OATAI,EAAAA,EAAAA,YAAU,WACJL,IACFV,EAAMU,MAAMA,GACZZ,GAASkB,EAAAA,EAAAA,QAEXlB,GAASmB,EAAAA,EAAAA,IAAgBb,KACzBc,EAAAA,EAAAA,GAASL,EAAiBX,EAC3B,GAAE,CAACE,EAAIM,EAAOV,EAAOF,EAAUe,EAAiBX,IAE1CY,GAAeH,GACpB,SAACQ,EAAA,EAAD,KAEA,UAAC,EAAAC,SAAD,YACE,SAACC,EAAA,EAAD,CAAUC,MAAM,mBAChB,iBAAKC,UAAU,mBAAf,WACE,iBAAKA,UAAU,wBAAf,WACE,UAACC,EAAA,EAAD,CAAYC,UAAU,KAAtB,oBACUhB,GAASA,EAAMiB,IAAK,QAK9B,SAACF,EAAA,EAAD,6BACA,iBAAKD,UAAU,2BAAf,WACE,4BACE,oCACA,0BAAOd,EAAMG,MAAQH,EAAMG,KAAKe,WAElC,4BACE,qCACA,0BAAOlB,EAAMmB,cAAgBnB,EAAMmB,aAAaC,cAElD,4BACE,uCACA,0BACGpB,EAAMmB,cAAN,UACInB,EAAMmB,aAAaE,QADvB,iCAEGrB,EAAMmB,aAAaG,KAFtB,iCAGGtB,EAAMmB,aAAarB,MAHtB,iCAIGE,EAAMmB,aAAaI,QAJtB,iCAKGvB,EAAMmB,aAAaK,kBAI7B,SAACT,EAAA,EAAD,uBACA,gBAAKD,UAAU,2BAAf,UACE,0BACE,cACEA,UACEd,EAAMyB,aAA4C,cAA7BzB,EAAMyB,YAAYC,OACnC,aACA,WAJR,SAOG1B,EAAMyB,aAA4C,cAA7BzB,EAAMyB,YAAYC,OACpC,OACA,kBAIV,SAACX,EAAA,EAAD,4BACA,gBAAKD,UAAU,2BAAf,UACE,0BACE,cACEA,UACEd,EAAM2B,aAAqC,cAAtB3B,EAAM2B,YACvB,aACA,WAJR,SAOG3B,EAAM2B,aAAe3B,EAAM2B,sBAMpC,iBAAKb,UAAU,wBAAf,WACE,SAACC,EAAA,EAAD,8BACA,gBAAKD,UAAU,iCAAf,SACGd,EAAM4B,YACL5B,EAAM4B,WAAWC,KAAI,SAACC,GAAD,OACnB,4BACE,UAAC,EAAAC,KAAD,CAAMC,GAAE,mBAAcF,EAAKG,SAA3B,WACE,gBAAKC,IAAG,WAAMJ,EAAKK,OAASC,IAAKN,EAAKZ,OACrCY,EAAKZ,SAER,4BACGY,EAAKO,SADR,MACqBP,EAAKQ,MAD1B,MAEE,6BAAKR,EAAKO,SAAWP,EAAKQ,cAPpBR,EAAKG,QADI,cAiBlC,C,iDCnID,IARiB,SAAC,GAAa,IAAZpB,EAAW,EAAXA,MACjB,OACE,SAAC,IAAD,WACI,2BAAQA,KAGf,C,kQCeY0B,EAAc,SAACvC,GAAD,gDAAW,WAAOX,GAAP,gGAElCA,EAAS,CAAEmD,KAAMC,EAAAA,KAEXC,EAAS,CAAEC,QAAS,CAAE,eAAgB,qBAJV,SAKXC,IAAAA,KAAW,oBAAqB5C,EAAO0C,GAL5B,gBAK1BG,EAL0B,EAK1BA,KAERxD,EAAS,CACPmD,KAAMM,EAAAA,GACNC,QAASF,IATuB,kDAYlCxD,EAAS,CACPmD,KAAMQ,EAAAA,GACND,QAAS,KAAME,SAASJ,KAAKK,UAdG,0DAAX,uDAmBdC,EAAW,2DAAM,WAAO9D,GAAP,8FAE1BA,EAAS,CAAEmD,KAAMY,EAAAA,KAFS,SAIHR,IAAAA,IAAU,qBAJP,gBAIlBC,EAJkB,EAIlBA,KACRxD,EAAS,CACPmD,KAAMa,EAAAA,GACNN,QAASF,EAAKS,SAPU,gDAU1BjE,EAAS,CACPmD,KAAMe,EAAAA,GACNR,QAAS,KAAME,SAASJ,KAAKK,UAZL,yDAAN,uDAiBX1C,EAAkB,SAACb,GAAD,gDAAQ,WAAON,GAAP,8FAEnCA,EAAS,CAAEmD,KAAMgB,EAAAA,KAFkB,SAIZZ,IAAAA,IAAA,wBAA2BjD,IAJf,gBAI3BkD,EAJ2B,EAI3BA,KACRxD,EAAS,CACPmD,KAAMiB,EAAAA,GACNV,QAASF,EAAK7C,QAPmB,gDAUnCX,EAAS,CACPmD,KAAMkB,EAAAA,GACNX,QAAS,KAAME,SAASJ,KAAKK,UAZI,yDAAR,uDAiBlBS,EAAe,2DAAM,WAAOtE,GAAP,8FAE9BA,EAAS,CAAEmD,KAAMoB,EAAAA,KAFa,SAIPhB,IAAAA,IAAU,wBAJH,gBAItBC,EAJsB,EAItBA,KAERxD,EAAS,CACPmD,KAAMqB,EAAAA,GACNd,QAASF,EAAKS,SARc,gDAW9BjE,EAAS,CACPmD,KAAMsB,EAAAA,GACNf,QAAS,KAAME,SAASJ,KAAKK,UAbD,yDAAN,uDAkBfa,EAAc,SAACpE,EAAIK,GAAL,gDAAe,WAAOX,GAAP,gGAEtCA,EAAS,CAAEmD,KAAMwB,EAAAA,KAEXtB,EAAS,CAAEC,QAAS,CAAE,eAAgB,qBAJN,SAMfC,IAAAA,IAAA,8BACEjD,GACvBK,EACA0C,GAToC,gBAM9BG,EAN8B,EAM9BA,KAMRxD,EAAS,CACPmD,KAAMyB,EAAAA,GACNlB,QAASF,EAAKqB,UAdsB,kDAiBtC7E,EAAS,CACPmD,KAAM2B,EAAAA,GACNpB,QAAS,KAAME,SAASJ,KAAKK,UAnBO,0DAAf,uDAwBdkB,EAAc,SAACzE,GAAD,gDAAQ,WAAON,GAAP,8FAE/BA,EAAS,CAAEmD,KAAM6B,EAAAA,KAFc,SAIRzB,IAAAA,OAAA,8BAAoCjD,IAJ5B,gBAIvBkD,EAJuB,EAIvBA,KAERxD,EAAS,CACPmD,KAAM8B,EAAAA,GACNvB,QAASF,EAAKqB,UARe,gDAY/B7E,EAAS,CACPmD,KAAM+B,EAAAA,GACNxB,QAAS,KAAME,SAASJ,KAAKK,UAdA,yDAAR,uDAmBd3C,EAAc,2DAAM,WAAOlB,GAAP,sEAC/BA,EAAS,CAAEmD,KAAMgC,EAAAA,KADc,2CAAN,sD,+ECzIpB,IAAM/D,EAAW,SAACL,EAAiBX,QAChBgF,IAApBrE,GACFsE,YAAW,YACe,IAApBtE,IACFuE,QAAQC,IAAI,WAAYxE,GACxBX,EAAS,UAEZ,GAAE,IAEN,EAEYoF,EAAY,SAACC,EAAO3E,EAAMV,EAAUF,IAEnC,IAAVuF,GACA3E,QACcsE,IAAdtE,EAAK4E,MACS,UAAd5E,EAAK4E,OAELJ,QAAQC,IAAI,aACZnF,EAAS,UACTF,EAAMU,MAAM,mCAEf,C","sources":["components/Orders/OrderDetails/MyOrderDetails.js","components/layout/MetaData/MetaData.js","redux/actions/orderAction.js","util/userAuth.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport \"./MyOrderDetails.css\";\r\nimport {  Typography } from \"@material-ui/core\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  clearErrors,\r\n  getOrderDetails,\r\n} from \"../../../redux/actions/orderAction\";\r\nimport { userAuth } from \"../../../util/userAuth\";\r\nimport Loader from \"../../layout/Loader/Loader\";\r\nimport MetaData from \"../../layout/MetaData/MetaData\";\r\n\r\n\r\nconst MyOrderDetails = () => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const { order, error, loading } = useSelector((state) => state.orderDetails);\r\n  const { isAuthenticated, loading: userLoading } = useSelector(\r\n    (state) => state.user\r\n  );\r\n  // const downloadInvoiceHandler = async () => {\r\n  //   try {\r\n  //     const link = document.createElement(\"a\");\r\n  //     link.target = \"_blank\";\r\n  //     link.download = `${order._id}.pdf`;\r\n\r\n  //     const data = await axios.get(`/api/v1/order/invoice/${order._id}`, {\r\n  //       responseType: \"blob\",\r\n  //     });\r\n\r\n  //     link.href = URL.createObjectURL(\r\n  //       new Blob([data.data], { type: \"text/pdf\" })\r\n  //     );\r\n  //     link.click();\r\n  //   } catch (error) {\r\n  //     alert.error(error.response.data.message);\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    dispatch(getOrderDetails(id));\r\n    userAuth(isAuthenticated, navigate);\r\n  }, [id, error, alert, dispatch, isAuthenticated, navigate]);\r\n\r\n  return userLoading && loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Fragment>\r\n      <MetaData title=\"Order Details\" />\r\n      <div className=\"orderDetailsPage\">\r\n        <div className=\"orderDetailsContainer\">\r\n          <Typography component=\"h1\">\r\n            Order #{order && order._id}{\" \"}\r\n            {/* {order && order.orderStatus === \"Delivered\" && (\r\n              <Button onClick={downloadInvoiceHandler}>Download Invoice</Button>\r\n            )} */}\r\n          </Typography>\r\n          <Typography>Shipping Info</Typography>\r\n          <div className=\"orderDetailsContainerBox\">\r\n            <div>\r\n              <p>Name : </p>\r\n              <span>{order.user && order.user.name}</span>\r\n            </div>\r\n            <div>\r\n              <p>Phone : </p>\r\n              <span>{order.shippingInfo && order.shippingInfo.phoneNo}</span>\r\n            </div>\r\n            <div>\r\n              <p>Address : </p>\r\n              <span>\r\n                {order.shippingInfo &&\r\n                  `${order.shippingInfo.address} ,\r\n                  ${order.shippingInfo.city} ,\r\n                  ${order.shippingInfo.state} ,\r\n                  ${order.shippingInfo.pinCode} ,\r\n                  ${order.shippingInfo.country}`}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <Typography>Payment</Typography>\r\n          <div className=\"orderDetailsContainerBox\">\r\n            <div>\r\n              <p\r\n                className={\r\n                  order.paymentInfo && order.paymentInfo.status === \"succeeded\"\r\n                    ? \"greenColor\"\r\n                    : \"redColor\"\r\n                }\r\n              >\r\n                {order.paymentInfo && order.paymentInfo.status === \"succeeded\"\r\n                  ? \"Paid\"\r\n                  : \"Not Paid\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <Typography>Order Status</Typography>\r\n          <div className=\"orderDetailsContainerBox\">\r\n            <div>\r\n              <p\r\n                className={\r\n                  order.orderStatus && order.orderStatus === \"Delivered\"\r\n                    ? \"greenColor\"\r\n                    : \"redColor\"\r\n                }\r\n              >\r\n                {order.orderStatus && order.orderStatus}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"orderDetailsCartItems\">\r\n          <Typography>Order Items : </Typography>\r\n          <div className=\"orderDetailsCartItemsContainer\">\r\n            {order.orderItems &&\r\n              order.orderItems.map((item) => (\r\n                <div key={item.product}>\r\n                  <Link to={`/product/${item.product}`}>\r\n                    <img src={`/${item.image}`} alt={item.name} />\r\n                    {item.name}\r\n                  </Link>\r\n                  <span>\r\n                    {item.quantity} X {item.price} =\r\n                    <b> {item.quantity * item.price}</b>\r\n                  </span>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MyOrderDetails;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData","import axios from \"axios\";\r\nimport {\r\n  ALL_ORDERS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  CLEAR_ERRORS,\r\n  CREATE_ORDER_FAIL,\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n} from \"../constants/orderConstant\";\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n    dispatch({\r\n      type: CREATE_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/me\");\r\n    dispatch({\r\n      type: MY_ORDERS_SUCCESS,\r\n      payload: data.orders,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/order/${id}`);\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data.order,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\r\n\r\n    dispatch({\r\n      type: ALL_ORDERS_SUCCESS,\r\n      payload: data.orders,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/order/${id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_ORDER_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_ORDER_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","export const userAuth = (isAuthenticated, navigate) => {\r\n  if (isAuthenticated !== undefined) {\r\n    setTimeout(() => {\r\n      if (isAuthenticated === false) {\r\n        console.log(\"userAuth\", isAuthenticated);\r\n        navigate(\"/login\");\r\n      }\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const adminAuth = (admin, user, navigate, alert) => {\r\n  if (\r\n    admin === true &&\r\n    user &&\r\n    user.role !== undefined &&\r\n    user.role !== \"admin\"\r\n  ) {\r\n    console.log(\"adminAuth\");\r\n    navigate(\"/login\");\r\n    alert.error(\"Cannot Access Admin Authorities\");\r\n  }\r\n};\r\n"],"names":["dispatch","useDispatch","alert","useAlert","navigate","useNavigate","id","useParams","useSelector","state","orderDetails","order","error","loading","user","isAuthenticated","userLoading","useEffect","clearErrors","getOrderDetails","userAuth","Loader","Fragment","MetaData","title","className","Typography","component","_id","name","shippingInfo","phoneNo","address","city","pinCode","country","paymentInfo","status","orderStatus","orderItems","map","item","Link","to","product","src","image","alt","quantity","price","createOrder","type","CREATE_ORDER_REQUEST","config","headers","axios","data","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","success","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","CLEAR_ERRORS","undefined","setTimeout","console","log","adminAuth","admin","role"],"sourceRoot":""}