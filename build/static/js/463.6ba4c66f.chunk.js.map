{"version":3,"file":"static/js/463.6ba4c66f.chunk.js","mappings":"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","sources":["components/User/admin/Dashboard/SideBar/SideBar.js","components/User/admin/EditUser/EditUser.js","components/layout/MetaData/MetaData.js","util/userAuth.js"],"sourcesContent":["import \"./SideBar.css\";\r\nimport Logo from \"../../../../../images/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MdAdd,\r\n  MdDashboard,\r\n  MdExpandMore,\r\n  MdImportExport,\r\n  MdListAlt,\r\n  MdPeople,\r\n  MdPostAdd,\r\n  MdRateReview,\r\n} from \"react-icons/md\";\r\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\r\nconst SideBar = () => {\r\n  return (\r\n    <div className=\"sideBar\">\r\n      <Link to=\"/\">\r\n        <img src={Logo} alt=\"Ecommerces\" />\r\n      </Link>\r\n      <Link to=\"/admin/dashboard\">\r\n        <MdDashboard />\r\n        <p>DashBoard</p>\r\n      </Link>\r\n\r\n      <TreeView\r\n        defaultCollapseIcon={<MdExpandMore />}\r\n        defaultExpandIcon={<MdImportExport />}\r\n      >\r\n        <TreeItem nodeId=\"1\" label=\"Products\">\r\n          <Link to=\"/admin/products\">\r\n            <TreeItem nodeId=\"2\" label=\"All\" icon={<MdPostAdd />} />\r\n          </Link>\r\n\r\n          <Link to=\"/admin/product\">\r\n            <TreeItem nodeId=\"3\" label=\"Create\" icon={<MdAdd />} />\r\n          </Link>\r\n        </TreeItem>\r\n      </TreeView>\r\n\r\n      <Link to=\"/admin/orders\">\r\n        <MdListAlt />\r\n        <p>Orders</p>\r\n      </Link>\r\n      <Link to=\"/admin/users\">\r\n        <MdPeople />\r\n        <p>Users</p>\r\n      </Link>\r\n      <Link to=\"/admin/reviews\">\r\n        <MdRateReview />\r\n        <p>Reviews</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport \"./EditUser.css\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { adminAuth, userAuth } from \"../../../../util/userAuth\";\r\nimport MetaData from \"../../../layout/MetaData/MetaData\";\r\nimport SideBar from \"../Dashboard/SideBar/SideBar\";\r\nimport {\r\n  updateUser,\r\n  clearErrors,\r\n  getUserDetails,\r\n} from \"../../../../redux/actions/userAction\";\r\nimport { IoMdPerson } from \"react-icons/io\";\r\nimport { FiMail } from \"react-icons/fi\";\r\nimport { UPDATE_USER_RESET } from \"../../../../redux/constants/userConstant\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { MdAccountTree } from \"react-icons/md\";\r\n\r\nconst EditUser = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { id } = useParams();\r\n\r\n  const { isUpdated, error, loading } = useSelector(\r\n    (state) => state.updateUser\r\n  );\r\n  const { isAuthenticated, user: authUser } = useSelector(\r\n    (state) => state.user\r\n  );\r\n\r\n  const { user: getUser } = useSelector(\r\n    (state) => state.getUser\r\n  );\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const dataOnChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const updateUserSubmit = (e) => {\r\n    e.preventDefault();\r\n    const myForm = new FormData();\r\n    myForm.set(\"name\", user.name);\r\n    myForm.set(\"email\", user.email);\r\n    myForm.set(\"role\", user.role);\r\n\r\n    dispatch(updateUser(id, myForm));\r\n  };\r\n\r\n  useEffect(() => {\r\n    userAuth(isAuthenticated, navigate);\r\n    if (authUser) adminAuth(true, authUser, navigate, alert);\r\n\r\n    if (getUser) {\r\n      setUser({\r\n        name: getUser.name,\r\n        email: getUser.email,\r\n        role: getUser.role,\r\n      });\r\n    }\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"User Updated Successfully\");\r\n      dispatch({ type: UPDATE_USER_RESET });\r\n      dispatch(getUserDetails(id));\r\n      navigate(\"/admin/users\");\r\n    }\r\n    dispatch(getUserDetails(id));\r\n  }, [\r\n    isAuthenticated,\r\n    authUser,\r\n    navigate,\r\n    alert,\r\n    dispatch,\r\n    error,\r\n    isUpdated,\r\n    getUser,\r\n    id,\r\n  ]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <MetaData title={`Update Product`} />\r\n\r\n      <div className=\"dashboard\">\r\n        <SideBar />\r\n\r\n        <div className=\"newProductContainer\">\r\n          <form className=\"signupForm\" onSubmit={updateUserSubmit}>\r\n            <Typography>Edit User Role</Typography>\r\n            <div className=\"signupName\">\r\n              <IoMdPerson />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                required\r\n                name=\"name\"\r\n                value={user.name}\r\n                onChange={dataOnChange}\r\n              />\r\n            </div>\r\n            <div className=\"signupEmail\">\r\n              <FiMail />\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                required\r\n                name=\"email\"\r\n                value={user.email}\r\n                onChange={dataOnChange}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <MdAccountTree />\r\n              <select\r\n                required\r\n                name=\"role\"\r\n                value={user.role}\r\n                onChange={dataOnChange}\r\n              >\r\n                <option value=\"\">Select Category</option>\r\n\r\n                <option value=\"admin\">admin</option>\r\n\r\n                <option value=\"user\">user</option>\r\n              </select>\r\n            </div>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update\"\r\n              className=\"signupBtn\"\r\n              disabled={\r\n                loading ? true : false || user.role === \"\" ? true : false\r\n              }\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData","export const userAuth = (isAuthenticated, navigate) => {\r\n  if (isAuthenticated !== undefined) {\r\n    setTimeout(() => {\r\n      if (isAuthenticated === false) {\r\n        console.log(\"userAuth\", isAuthenticated);\r\n        navigate(\"/login\");\r\n      }\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const adminAuth = (admin, user, navigate, alert) => {\r\n  if (\r\n    admin === true &&\r\n    user &&\r\n    user.role !== undefined &&\r\n    user.role !== \"admin\"\r\n  ) {\r\n    console.log(\"adminAuth\");\r\n    navigate(\"/login\");\r\n    alert.error(\"Cannot Access Admin Authorities\");\r\n  }\r\n};\r\n"],"names":["className","Link","to","src","Logo","alt","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","label","icon","navigate","useNavigate","dispatch","useDispatch","alert","useAlert","id","useParams","useSelector","state","updateUser","isUpdated","error","loading","user","isAuthenticated","authUser","getUser","useState","name","email","role","setUser","dataOnChange","e","target","value","useEffect","userAuth","adminAuth","clearErrors","success","type","UPDATE_USER_RESET","getUserDetails","Fragment","MetaData","title","SideBar","onSubmit","preventDefault","myForm","FormData","set","Typography","placeholder","required","onChange","disabled","undefined","setTimeout","console","log","admin"],"sourceRoot":""}