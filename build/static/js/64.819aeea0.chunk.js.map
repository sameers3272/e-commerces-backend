{"version":3,"file":"static/js/64.819aeea0.chunk.js","mappings":"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","sources":["components/Orders/MyOrders/MyOrders.js","components/layout/MetaData/MetaData.js","redux/actions/orderAction.js","util/userAuth.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Loader from \"../../layout/Loader/Loader\";\r\nimport MetaData from \"../../layout/MetaData/MetaData\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { MdLaunch } from \"react-icons/md\";\r\nimport { clearErrors, myOrders } from \"../../../redux/actions/orderAction\";\r\nimport { userAuth } from \"../../../util/userAuth\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"./MyOrders.css\";\r\n\r\nconst MyOrders = () => {\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n  const {\r\n    user,\r\n    isAuthenticated,\r\n    loading: userLoading,\r\n  } = useSelector((state) => state.user);\r\n  const { loading, error, orders } = useSelector((state) => state.myOrders);\r\n\r\n  const columns = [\r\n    {\r\n      field: \"id\",\r\n      headerName: \"Order ID\",\r\n      minWidth: 300,\r\n      flex: 0.5,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Status\",\r\n      minWidth: 150,\r\n      flex: 0.2,\r\n      cellClassName: (params) => {\r\n        return params.getValue(params.id, \"status\") === \"Delivered\"\r\n          ? \"greenColor\"\r\n          : \"redColor\";\r\n      },\r\n    },\r\n    {\r\n      field: \"noOfItems\",\r\n      headerName: \"No of Items\",\r\n      type: \"number\",\r\n      minWidth: 150,\r\n      flex: 0.2,\r\n    },\r\n    {\r\n      field: \"amount\",\r\n      headerName: \"Amount\",\r\n      type: \"number\",\r\n      minWidth: 150,\r\n      flex: 0.3,\r\n    },\r\n    {\r\n      field: \"action\",\r\n      headerName: \"Action\",\r\n      type: \"number\",\r\n      minWidth: 150,\r\n      flex: 0.2,\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <Link to={`/order/${params.getValue(params.id, \"id\")}`}>\r\n            <MdLaunch size={window.innerWidth >= 600 ? 25 : 20} />\r\n          </Link>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const rows = [];\r\n\r\n  orders &&\r\n    orders.forEach((order, index) => {\r\n      rows.push({\r\n        noOfItems: order.orderItems.length,\r\n        id: order._id,\r\n        status: order.orderStatus,\r\n        amount: order.totalPrice,\r\n      });\r\n    });\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    dispatch(myOrders());\r\n\r\n    userAuth(isAuthenticated, navigate);\r\n  }, [error, dispatch, alert, isAuthenticated, navigate]);\r\n  return (\r\n    <Fragment>\r\n      {loading && userLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className=\"myOrdersPage\">\r\n          <MetaData title={`${user.name} - Orders`} />\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"myOrdersTable\"\r\n            autoHeight\r\n          />\r\n\r\n          <Typography id=\"myOrdersHeading\">{`${user.name}'s Orders`}</Typography>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MyOrders;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData","import axios from \"axios\";\r\nimport {\r\n  ALL_ORDERS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  CLEAR_ERRORS,\r\n  CREATE_ORDER_FAIL,\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n} from \"../constants/orderConstant\";\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n    dispatch({\r\n      type: CREATE_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/me\");\r\n    dispatch({\r\n      type: MY_ORDERS_SUCCESS,\r\n      payload: data.orders,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/order/${id}`);\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data.order,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\r\n\r\n    dispatch({\r\n      type: ALL_ORDERS_SUCCESS,\r\n      payload: data.orders,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/order/${id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_ORDER_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_ORDER_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","export const userAuth = (isAuthenticated, navigate) => {\r\n  if (isAuthenticated !== undefined) {\r\n    setTimeout(() => {\r\n      if (isAuthenticated === false) {\r\n        console.log(\"userAuth\", isAuthenticated);\r\n        navigate(\"/login\");\r\n      }\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const adminAuth = (admin, user, navigate, alert) => {\r\n  if (\r\n    admin === true &&\r\n    user &&\r\n    user.role !== undefined &&\r\n    user.role !== \"admin\"\r\n  ) {\r\n    console.log(\"adminAuth\");\r\n    navigate(\"/login\");\r\n    alert.error(\"Cannot Access Admin Authorities\");\r\n  }\r\n};\r\n"],"names":["dispatch","useDispatch","alert","useAlert","navigate","useNavigate","useSelector","state","user","isAuthenticated","userLoading","loading","myOrders","error","orders","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","id","type","sortable","renderCell","Link","to","size","window","innerWidth","rows","forEach","order","index","push","noOfItems","orderItems","length","_id","status","orderStatus","amount","totalPrice","useEffect","clearErrors","userAuth","Fragment","Loader","className","MetaData","title","name","pageSize","disableSelectionOnClick","autoHeight","Typography","createOrder","CREATE_ORDER_REQUEST","config","headers","axios","data","CREATE_ORDER_SUCCESS","payload","localStorage","removeItem","CREATE_ORDER_FAIL","response","message","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","getOrderDetails","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","updateOrder","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","success","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","CLEAR_ERRORS","undefined","setTimeout","console","log","adminAuth","admin","role"],"sourceRoot":""}