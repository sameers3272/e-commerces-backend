{"version":3,"file":"static/js/178.277f789d.chunk.js","mappings":"oKAkBA,EAfe,SAACA,GACd,OACE,mBACEC,UAAS,cAASD,EAAMC,UAAUD,EAAMC,UAAU,IAClDC,KAAMF,EAAME,KACZC,QAASH,EAAMG,QACfC,MAAOJ,EAAMI,MACbC,IAAKL,EAAMK,IACXC,GAAIN,EAAMM,GANZ,SAQGN,EAAMO,UAGZ,C,6HCmCD,EA3CsB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACjBC,EAAQ,CACZ,CACEC,OAAO,SAACC,EAAA,EAAD,+BACPC,MAAM,SAAC,MAAD,CAAiBR,MAAO,CAAES,SAAU,OAE5C,CACEH,OAAO,SAACC,EAAA,EAAD,4BACPC,MAAM,SAAC,MAAD,CAAmBR,MAAO,CAAES,SAAU,OAE9C,CACEH,OAAO,SAACC,EAAA,EAAD,sBACPC,MAAM,SAAC,MAAD,CAAkBR,MAAO,CAAES,SAAU,QAO/C,OACE,gBAAKZ,UAAU,gBAAf,UACE,SAACa,EAAA,EAAD,CAASC,kBAAgB,EAACP,WAAYA,EAAYJ,MALnC,CACjBY,UAAW,cAIT,SACGP,EAAMQ,KAAI,SAACC,EAAMC,GAAP,OACT,SAACC,EAAA,EAAD,CAEEC,OAAQb,IAAeW,EACvBG,UAAWd,GAAcW,EAH3B,UAKE,SAACI,EAAA,EAAD,CACEnB,MAAO,CACLoB,MAAOhB,GAAcW,EAAQ,SAAW,SAE1CP,KAAMM,EAAKN,KAJb,SAMGM,EAAKR,SAVHS,EAFE,OAmBlB,C,gOCuHD,EAvJiB,WACf,IAAMM,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MACd,GAA4BC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAhCC,EAAR,EAAQA,gBACR,GAAyBH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMG,IAAjB,IAA7BC,EAAR,EAAQA,aAER,GAA8CC,EAAAA,EAAAA,UAC5CD,EAAaE,QACTF,EACA,CACEE,QAAS,GACTC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTV,MAAO,KATf,eAAOW,EAAP,KAAwBC,EAAxB,MAaAC,EAAAA,EAAAA,YAAU,YACc,IAAlBX,GACFT,EAAS,2BAEZ,GAAE,CAACS,EAAiBT,IACrB,IAAMqB,EAAkB,SAACC,GACvBH,GAAmB,kBAAKD,GAAN,cAAwBI,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,QACpE,EAYD,OACE,iBAAK9C,MAAO,CAAC+C,UAAU,SAAvB,WACE,SAACC,EAAA,EAAD,CAAe5C,WAAY,KAC3B,gBAAKP,UAAU,oBAAf,UACE,iBAAKA,UAAU,cAAf,WACE,eAAIA,UAAU,kBAAd,+BACA,kBACEA,UAAU,eACVoD,QAAQ,sBACRC,SAnBa,SAACP,GACtBA,EAAEQ,iBACCZ,EAAgBF,QAAQe,OAAS,IAAKb,EAAgBF,QAAQe,OAAO,GACtE3B,EAAM4B,MAAM,qCAGd9B,GAAS+B,EAAAA,EAAAA,IAAiBf,IAC1BlB,EAAS,kBACV,EAQO,WAKE,4BACE,SAAC,MAAD,KACA,kBACEvB,KAAK,OACLyD,YAAY,UACZC,UAAQ,EACRX,KAAK,UACLC,MAAOP,EAAgBL,QACvBuB,SAAUf,QAId,4BACE,SAAC,MAAD,KACA,kBACE5C,KAAK,OACL+C,KAAK,OACLU,YAAY,OACZC,UAAQ,EACRV,MAAOP,EAAgBJ,KACvBsB,SAAUf,QAId,4BACE,SAAC,MAAD,KACA,kBACE5C,KAAK,SACL+C,KAAK,UACLU,YAAY,WACZC,UAAQ,EACRV,MAAOP,EAAgBH,QACvBqB,SAAUf,QAId,4BACE,SAAC,MAAD,KACA,kBACE5C,KAAK,SACL+C,KAAK,UACLa,aAAa,MACbH,YAAY,eACZC,UAAQ,EACRV,MAAOP,EAAgBF,QACvBoB,SAAUf,QAId,4BACE,SAAC,MAAD,KACA,oBACEc,UAAQ,EACRV,MAAOP,EAAgBD,QACvBO,KAAK,UACLY,SAAUf,EAJZ,WAME,mBAAQI,MAAM,GAAd,qBACCa,EAAAA,EAAAA,kBAA0B9C,KAAI,SAACyB,GAAD,OAC7B,mBAA8BQ,MAAOR,EAAQsB,QAA7C,SACGtB,EAAQO,MADEP,EAAQsB,QADQ,UAQlCrB,EAAgBD,UACf,4BACE,SAAC,MAAD,KACA,oBACEkB,UAAQ,EACRX,KAAK,QACLC,MAAOP,EAAgBX,MACvB6B,SAAUf,EAJZ,WAME,mBAAQI,MAAM,GAAd,mBACCe,EAAAA,GAAAA,mBAAyBtB,EAAgBD,SAASzB,KACjD,SAACe,GAAD,OACE,mBAAQkB,MAAOlB,EAAMgC,QAArB,SACGhC,EAAMiB,MAD0BjB,EAAMgC,QAD3C,WAUR,SAACE,EAAA,EAAD,CACEhE,KAAK,SACLiE,UAAUxB,EAAgBX,MAC1B/B,UAAU,cAHZ,gCAYX,C,0LC9JYmE,EAAiB,SAAC9D,EAAI+D,GAAL,gDAAkB,WAAO1C,EAAU2C,GAAjB,8FACvBC,IAAAA,IAAA,0BAA6BjE,IADN,gBACtCkE,EADsC,EACtCA,KACR7C,EAAS,CACPzB,KAAMuE,EAAAA,GACNC,QAAS,CACPC,QAASH,EAAKG,QAAQC,IACtB3B,KAAMuB,EAAKG,QAAQ1B,KACnB4B,MAAOL,EAAKG,QAAQE,MACpBC,MAAON,EAAKG,QAAQI,OAAO,GAC3BC,MAAOR,EAAKG,QAAQK,MACpBX,SAAAA,KAGJY,aAAaC,QAAQ,YAAaC,KAAKC,UAAUd,IAAWnC,KAAKkD,YAbnB,2CAAlB,yDAgBjBC,EAAsB,SAAChF,GAAD,gDAAQ,WAAOqB,EAAU2C,GAAjB,sEACzC3C,EAAS,CACPzB,KAAMqF,EAAAA,GACNb,QAASpE,IAEX2E,aAAaC,QAAQ,YAAaC,KAAKC,UAAUd,IAAWnC,KAAKkD,YALxB,2CAAR,yDAQtBG,EAAY,2DAAM,WAAO7D,GAAP,sEAC7BA,EAAS,CACPzB,KAAMuF,EAAAA,KAERR,aAAaS,WAAW,aAJK,2CAAN,uDAOZhC,EAAmB,SAACc,GAAD,gDAAU,WAAO7C,EAAU2C,GAAjB,sEACxC3C,EAAS,CAAEzB,KAAMyF,EAAAA,GAAoBjB,QAASF,IAC9CS,aAAaC,QACX,eACAC,KAAKC,UAAUd,IAAWnC,KAAKC,eAJO,2CAAV,wD","sources":["components/Button/Button.js","components/Cart/CheckOutSteps/CheckOutSteps.js","components/Cart/Shipping/Shipping.js","redux/actions/cartAction.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={`btn ${props.className?props.className:''}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      style={props.style}\r\n      ref={props.ref}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { Step, StepLabel, Stepper, Typography } from \"@material-ui/core\";\r\nimport {\r\n  MdAccountBalance,\r\n  MdLibraryAddCheck,\r\n  MdLocalShipping,\r\n} from \"react-icons/md\";\r\nimport \"./CheckOutSteps.css\";\r\n\r\nconst CheckOutSteps = ({ activeStep }) => {\r\n  const steps = [\r\n    {\r\n      label: <Typography>Shipping Details</Typography>,\r\n      icon: <MdLocalShipping style={{ fontSize: 20 }} />,\r\n    },\r\n    {\r\n      label: <Typography>Confirm Order</Typography>,\r\n      icon: <MdLibraryAddCheck style={{ fontSize: 20 }} />,\r\n    },\r\n    {\r\n      label: <Typography>Payment</Typography>,\r\n      icon: <MdAccountBalance style={{ fontSize: 20 }} />,\r\n    },\r\n  ];\r\n\r\n  const stepStyles = {\r\n    boxSizing: \"border-box\",\r\n  };\r\n  return (\r\n    <div className=\"checkOutSteps\">\r\n      <Stepper alternativeLabel activeStep={activeStep} style={stepStyles}>\r\n        {steps.map((item, index) => (\r\n          <Step\r\n            key={index}\r\n            active={activeStep === index ? true : false}\r\n            completed={activeStep >= index ? true : false}\r\n          >\r\n            <StepLabel\r\n              style={{\r\n                color: activeStep >= index ? \"tomato\" : \"unset\",\r\n              }}\r\n              icon={item.icon}\r\n            >\r\n              {item.label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckOutSteps;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  MdHome,\r\n  MdLocationCity,\r\n  MdOutlinePlace,\r\n  MdPhone,\r\n  MdPublic,\r\n  MdTransferWithinAStation,\r\n} from \"react-icons/md\";\r\nimport \"./Shipping.css\";\r\nimport { Country, State } from \"country-state-city\";\r\nimport Button from \"../../Button/Button\";\r\nimport CheckOutSteps from \"../CheckOutSteps/CheckOutSteps\";\r\nimport { saveShippingInfo } from \"../../../redux/actions/cartAction\";\r\nconst Shipping = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const alert = useAlert();\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const { shippingInfo } = useSelector((state) => state.cart);\r\n\r\n  const [newShippingInfo, setNewShippingInfo] = useState(\r\n    shippingInfo.address\r\n      ? shippingInfo\r\n      : {\r\n          address: \"\",\r\n          city: \"\",\r\n          pinCode: \"\",\r\n          phoneNo: \"\",\r\n          country: \"\",\r\n          state: \"\",\r\n        }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated===false) {\r\n      navigate(\"/login?redirect=shipping\");\r\n    }\r\n  }, [isAuthenticated, navigate]);\r\n  const onChangeHandler = (e) => {\r\n    setNewShippingInfo({ ...newShippingInfo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const shippingSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(newShippingInfo.phoneNo.length < 10 ||newShippingInfo.phoneNo.length>10){\r\n      alert.error(\"Phone Number should be 10 digits\")\r\n      return;\r\n    }\r\n    dispatch(saveShippingInfo(newShippingInfo));\r\n    navigate(\"/order/confirm\");\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:\"3vmax\"}}>\r\n      <CheckOutSteps activeStep={0} />\r\n      <div className=\"shippingContainer\">\r\n        <div className=\"shippingBox\">\r\n          <h2 className=\"shippingHeading\">Shipping Details</h2>\r\n          <form\r\n            className=\"shippingForm\"\r\n            encType=\"multipart/form-data\"\r\n            onSubmit={shippingSubmit}\r\n          >\r\n            <div>\r\n              <MdHome />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Address\"\r\n                required\r\n                name=\"address\"\r\n                value={newShippingInfo.address}\r\n                onChange={onChangeHandler}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <MdLocationCity />\r\n              <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                placeholder=\"City\"\r\n                required\r\n                value={newShippingInfo.city}\r\n                onChange={onChangeHandler}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <MdOutlinePlace />\r\n              <input\r\n                type=\"number\"\r\n                name=\"pinCode\"\r\n                placeholder=\"Pin Code\"\r\n                required\r\n                value={newShippingInfo.pinCode}\r\n                onChange={onChangeHandler}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <MdPhone />\r\n              <input\r\n                type=\"number\"\r\n                name=\"phoneNo\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Phone Number\"\r\n                required\r\n                value={newShippingInfo.phoneNo}\r\n                onChange={onChangeHandler}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <MdPublic />\r\n              <select\r\n                required\r\n                value={newShippingInfo.country}\r\n                name=\"country\"\r\n                onChange={onChangeHandler}\r\n              >\r\n                <option value=\"\">Country</option>\r\n                {Country.getAllCountries().map((country) => (\r\n                  <option key={country.isoCode} value={country.isoCode}>\r\n                    {country.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {newShippingInfo.country && (\r\n              <div>\r\n                <MdTransferWithinAStation />\r\n                <select\r\n                  required\r\n                  name=\"state\"\r\n                  value={newShippingInfo.state}\r\n                  onChange={onChangeHandler}\r\n                >\r\n                  <option value=\"\">State</option>\r\n                  {State.getStatesOfCountry(newShippingInfo.country).map(\r\n                    (state) => (\r\n                      <option value={state.isoCode} key={state.isoCode}>\r\n                        {state.name}\r\n                      </option>\r\n                    )\r\n                  )}\r\n                </select>\r\n              </div>\r\n            )}\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={newShippingInfo.state ? false : true}\r\n              className=\"shippingBtn\"\r\n            >\r\n              Continue\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","import axios from \"axios\";\r\nimport {\r\n  ADD_TO_CART,\r\n  CLEAR_CART,\r\n  REMOVE_CART_ITEM,\r\n  SAVE_SHIPPING_INFO,\r\n} from \"../constants/cartConstant\";\r\n\r\nexport const addItemsToCart = (id, quantity) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/v1/product/${id}`);\r\n  dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n      product: data.product._id,\r\n      name: data.product.name,\r\n      price: data.product.price,\r\n      image: data.product.images[0],\r\n      stock: data.product.stock,\r\n      quantity,\r\n    },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeItemsFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: REMOVE_CART_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const clearCart = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_CART,\r\n  });\r\n  localStorage.removeItem(\"cartItems\");\r\n};\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch, getState) => {\r\n  dispatch({ type: SAVE_SHIPPING_INFO, payload: data });\r\n  localStorage.setItem(\r\n    \"shippingInfo\",\r\n    JSON.stringify(getState().cart.shippingInfo)\r\n  );\r\n};\r\n"],"names":["props","className","type","onClick","style","ref","id","children","activeStep","steps","label","Typography","icon","fontSize","Stepper","alternativeLabel","boxSizing","map","item","index","Step","active","completed","StepLabel","color","navigate","useNavigate","dispatch","useDispatch","alert","useAlert","useSelector","state","user","isAuthenticated","cart","shippingInfo","useState","address","city","pinCode","phoneNo","country","newShippingInfo","setNewShippingInfo","useEffect","onChangeHandler","e","target","name","value","marginTop","CheckOutSteps","encType","onSubmit","preventDefault","length","error","saveShippingInfo","placeholder","required","onChange","autoComplete","Country","isoCode","State","Button","disabled","addItemsToCart","quantity","getState","axios","data","ADD_TO_CART","payload","product","_id","price","image","images","stock","localStorage","setItem","JSON","stringify","cartItems","removeItemsFromCart","REMOVE_CART_ITEM","clearCart","CLEAR_CART","removeItem","SAVE_SHIPPING_INFO"],"sourceRoot":""}