{"version":3,"file":"static/js/175.1ac61002.chunk.js","mappings":"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","sources":["components/Button/Button.js","components/User/admin/Dashboard/SideBar/SideBar.js","components/User/admin/UpdateOrder/UpdateOrder.js","components/layout/MetaData/MetaData.js","redux/actions/orderAction.js","util/userAuth.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={`btn ${props.className?props.className:''}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      style={props.style}\r\n      ref={props.ref}\r\n      id={props.id}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import \"./SideBar.css\";\r\nimport Logo from \"../../../../../images/logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  MdAdd,\r\n  MdDashboard,\r\n  MdExpandMore,\r\n  MdImportExport,\r\n  MdListAlt,\r\n  MdPeople,\r\n  MdPostAdd,\r\n  MdRateReview,\r\n} from \"react-icons/md\";\r\nimport { TreeItem, TreeView } from \"@material-ui/lab\";\r\nconst SideBar = () => {\r\n  return (\r\n    <div className=\"sideBar\">\r\n      <Link to=\"/\">\r\n        <img src={Logo} alt=\"Ecommerces\" />\r\n      </Link>\r\n      <Link to=\"/admin/dashboard\">\r\n        <MdDashboard />\r\n        <p>DashBoard</p>\r\n      </Link>\r\n\r\n      <TreeView\r\n        defaultCollapseIcon={<MdExpandMore />}\r\n        defaultExpandIcon={<MdImportExport />}\r\n      >\r\n        <TreeItem nodeId=\"1\" label=\"Products\">\r\n          <Link to=\"/admin/products\">\r\n            <TreeItem nodeId=\"2\" label=\"All\" icon={<MdPostAdd />} />\r\n          </Link>\r\n\r\n          <Link to=\"/admin/product\">\r\n            <TreeItem nodeId=\"3\" label=\"Create\" icon={<MdAdd />} />\r\n          </Link>\r\n        </TreeItem>\r\n      </TreeView>\r\n\r\n      <Link to=\"/admin/orders\">\r\n        <MdListAlt />\r\n        <p>Orders</p>\r\n      </Link>\r\n      <Link to=\"/admin/users\">\r\n        <MdPeople />\r\n        <p>Users</p>\r\n      </Link>\r\n      <Link to=\"/admin/reviews\">\r\n        <MdRateReview />\r\n        <p>Reviews</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { MdAccountTree } from \"react-icons/md\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  clearErrors,\r\n  getOrderDetails,\r\n  updateOrder,\r\n} from \"../../../../redux/actions/orderAction\";\r\nimport { UPDATE_ORDER_RESET } from \"../../../../redux/constants/orderConstant\";\r\nimport { adminAuth, userAuth } from \"../../../../util/userAuth\";\r\nimport Button from \"../../../Button/Button\";\r\nimport Loader from \"../../../layout/Loader/Loader\";\r\nimport MetaData from \"../../../layout/MetaData/MetaData\";\r\nimport SideBar from \"../Dashboard/SideBar/SideBar\";\r\nimport \"./UpdateOrder.css\";\r\n\r\nconst UpdateOrder = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const { order, loading } = useSelector((state) => state.orderDetails);\r\n  const { isUpdated, error } = useSelector((state) => state.order);\r\n\r\n  const { user, isAuthenticated } = useSelector((state) => state.user);\r\n\r\n  const updateStatusHandler = (e) => {\r\n    e.preventDefault();\r\n    const myForm = new FormData();\r\n    myForm.set(\"status\", status);\r\n    dispatch(updateOrder(id, myForm));\r\n  };\r\n\r\n  useEffect(() => {\r\n    userAuth(isAuthenticated, navigate);\r\n    adminAuth(true, user, navigate, alert);\r\n\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n\r\n    if (isUpdated) {\r\n      alert.success(\"Order Updated Successfully\");\r\n      navigate(\"/admin/orders\");\r\n      dispatch({ type: UPDATE_ORDER_RESET });\r\n    }\r\n\r\n    dispatch(getOrderDetails(id));\r\n  }, [id, isUpdated, dispatch, error, isAuthenticated, navigate, user, alert]);\r\n\r\n  return loading === undefined || loading === true ? (\r\n    <Loader />\r\n  ) : (\r\n    <Fragment>\r\n      <MetaData title={`Update Order`} />\r\n\r\n      <div className=\"dashboard\">\r\n        <SideBar />\r\n\r\n        <div className=\"orderPage\">\r\n          <div className=\"confirmShippingArea\">\r\n            <Typography>Order Items : </Typography>\r\n            <div className=\"orderDetailsCartItemsContainer\">\r\n              {order.orderItems &&\r\n                order.orderItems.map((item) => (\r\n                  <div key={item.product}>\r\n                    <Link to={`/product/${item.product}`}>\r\n                      <img src={`/${item.image}`} alt={item.name} />\r\n                      {item.name}\r\n                    </Link>\r\n                    <span>\r\n                      {item.quantity} X {item.price} =\r\n                      <b> {item.quantity * item.price}</b>\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <Typography className=\"heading\">Shipping Info</Typography>\r\n            <div>\r\n              <div>\r\n                <p>Name : </p>\r\n                <span>{order.user.name}</span>\r\n              </div>\r\n              <div>\r\n                <p>Phone : </p>\r\n                <span>{order.shippingInfo.phoneNo}</span>\r\n              </div>\r\n              <div>\r\n                <p>Address : </p>\r\n                <span>\r\n                  {order.shippingInfo &&\r\n                    `${order.shippingInfo.address} ,\r\n                  ${order.shippingInfo.city} ,\r\n                  ${order.shippingInfo.state} ,\r\n                  ${order.shippingInfo.pinCode} ,\r\n                  ${order.shippingInfo.country}`}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <Typography>Order Summary</Typography>\r\n            <div className=\"orderSummary\">\r\n              <div>\r\n                <p>Subtotal:</p>\r\n                <span>₹{order.orderItems.reduce((prev,next)=>prev+(next.price*next.quantity),0)}</span>\r\n              </div>\r\n              <div>\r\n                <p>Shipping Charges:</p>\r\n                <span>₹{order.shippingPrice}</span>\r\n              </div>\r\n              <div>\r\n                <p>GST:</p>\r\n                <span>₹{order.taxPrice}</span>\r\n              </div>\r\n              <div>\r\n                <p>\r\n                  <b>Total:</b>\r\n                </p>\r\n                <span>₹{order.totalPrice}</span>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n          <div className=\"confirmStatusForm\" style={order.orderStatus === \"Delivered\" ?{display:\"none\"}:{}}>\r\n          <Typography>Payment</Typography>\r\n            <div className=\"orderDetailsContainerBox\">\r\n              <div>\r\n                <p\r\n                  className={\r\n                    order.paymentInfo &&\r\n                    order.paymentInfo.status === \"succeeded\"\r\n                      ? \"greenColor\"\r\n                      : \"redColor\"\r\n                  }\r\n                >\r\n                  {order.paymentInfo && order.paymentInfo.status === \"succeeded\"\r\n                    ? \"Paid\"\r\n                    : \"Not Paid\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <Typography>Order Status</Typography>\r\n            <div className=\"orderDetailsContainerBox\">\r\n              <div>\r\n                <p\r\n                  className={\r\n                    order.orderStatus && order.orderStatus === \"Delivered\"\r\n                      ? \"greenColor\"\r\n                      : \"redColor\"\r\n                  }\r\n                >\r\n                  {order.orderStatus && order.orderStatus}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <form className=\"statusForm\" onSubmit={updateStatusHandler}>\r\n            <Typography>Edit Order Status</Typography>\r\n              <div>\r\n                <MdAccountTree />\r\n                <select\r\n                  required\r\n                  name=\"status\"\r\n                  onChange={(e) => setStatus(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select Category</option>\r\n                  {order.orderStatus === \"Processing\" && (\r\n                    <option value=\"Shipped\">Shipped</option>\r\n                  )}\r\n                  {order.orderStatus === \"Shipped\" && (\r\n                    <option value=\"Delivered\">Delivered</option>\r\n                  )}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <Button\r\n                  id=\"updateStatusBtn\"\r\n                  type=\"submit\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdateOrder;\r\n","import Helmet from \"react-helmet\";\r\n\r\nconst MetaData = ({title}) => {\r\n  return (\r\n    <Helmet>\r\n        <title>{title}</title>\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nexport default MetaData","import axios from \"axios\";\r\nimport {\r\n  ALL_ORDERS_FAIL,\r\n  ALL_ORDERS_REQUEST,\r\n  ALL_ORDERS_SUCCESS,\r\n  CLEAR_ERRORS,\r\n  CREATE_ORDER_FAIL,\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  DELETE_ORDER_FAIL,\r\n  DELETE_ORDER_REQUEST,\r\n  DELETE_ORDER_SUCCESS,\r\n  MY_ORDERS_FAIL,\r\n  MY_ORDERS_REQUEST,\r\n  MY_ORDERS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  UPDATE_ORDER_FAIL,\r\n  UPDATE_ORDER_REQUEST,\r\n  UPDATE_ORDER_SUCCESS,\r\n} from \"../constants/orderConstant\";\r\n\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n\r\n    dispatch({\r\n      type: CREATE_ORDER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const myOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/orders/me\");\r\n    dispatch({\r\n      type: MY_ORDERS_SUCCESS,\r\n      payload: data.orders,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: MY_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/order/${id}`);\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data.order,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllOrders = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/orders\");\r\n\r\n    dispatch({\r\n      type: ALL_ORDERS_SUCCESS,\r\n      payload: data.orders,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_ORDERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateOrder = (id, order) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_ORDER_REQUEST });\r\n\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/order/${id}`,\r\n      order,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_ORDER_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_ORDER_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/order/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_ORDER_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n    \r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_ORDER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n","export const userAuth = (isAuthenticated, navigate) => {\r\n  if (isAuthenticated !== undefined) {\r\n    setTimeout(() => {\r\n      if (isAuthenticated === false) {\r\n        console.log(\"userAuth\", isAuthenticated);\r\n        navigate(\"/login\");\r\n      }\r\n    }, 500);\r\n  }\r\n};\r\n\r\nexport const adminAuth = (admin, user, navigate, alert) => {\r\n  if (\r\n    admin === true &&\r\n    user &&\r\n    user.role !== undefined &&\r\n    user.role !== \"admin\"\r\n  ) {\r\n    console.log(\"adminAuth\");\r\n    navigate(\"/login\");\r\n    alert.error(\"Cannot Access Admin Authorities\");\r\n  }\r\n};\r\n"],"names":["props","className","type","onClick","style","ref","id","children","Link","to","src","Logo","alt","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","nodeId","label","icon","useParams","navigate","useNavigate","alert","useAlert","dispatch","useDispatch","useState","status","setStatus","useSelector","state","orderDetails","order","loading","isUpdated","error","user","isAuthenticated","useEffect","userAuth","adminAuth","clearErrors","success","UPDATE_ORDER_RESET","getOrderDetails","undefined","Loader","Fragment","MetaData","title","SideBar","Typography","orderItems","map","item","product","image","name","quantity","price","shippingInfo","phoneNo","address","city","pinCode","country","reduce","prev","next","shippingPrice","taxPrice","totalPrice","orderStatus","display","paymentInfo","onSubmit","e","preventDefault","myForm","FormData","set","updateOrder","required","onChange","target","value","Button","disabled","createOrder","CREATE_ORDER_REQUEST","config","headers","axios","data","CREATE_ORDER_SUCCESS","payload","CREATE_ORDER_FAIL","response","message","myOrders","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","orders","MY_ORDERS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","getAllOrders","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","deleteOrder","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","CLEAR_ERRORS","setTimeout","console","log","admin","role"],"sourceRoot":""}